from generador_de_archivos import generar_certificado_pdf
import re
from datetime import datetime

#funcion para salir 
def confirmar_entrada(mensaje):
    respuesta = input(mensaje).strip().lower()
    return respuesta != "salir"

# Funci√≥n para calcular promedio
def calcular_promedio(notas):
    return sum(notas) / len(notas) if notas else 0


# Funci√≥n  para pedir datos con confirmaci√≥n
def pedir_dato(mensaje, validar=None, ejemplo=None, mayus=False):
    while True:
        valor = input(f"   ‚Üí {mensaje}: ").strip()
        if mayus:
            valor = valor.upper()

        if validar and not validar(valor):
            print(f"‚ö†Ô∏è Formato inv√°lido.", end=" ")
            if ejemplo:
                print(f"Ejemplo: {ejemplo}")
            else:
                print()
            continue

        if not valor:
            print("‚ö†Ô∏è Este campo no puede estar vac√≠o.")
            continue

        print(f"   ‚úÖ Has ingresado: {valor}")
        print("   ¬øDeseas confirmar este dato?")
        print("   1. Confirmar")
        print("   2. Modificar")
        opcion = input("   Elige (1-2): ").strip()
        if opcion == "1":
            return valor
        else:
            print("   üîÅ Reingresa el dato...")


# Funci√≥n principal agregar estudiante
def agregar_estudiante(estudiantes):
    print("="*70)
    print("üìå REGISTRO DE NUEVOS ESTUDIANTES")
    print("="*70)

    # Pedir cantidad
    while True:
        try:
            cantidad_estudiantes = int(input("¬øCu√°ntos estudiantes deseas agregar?: ").strip())
            if cantidad_estudiantes > 0:
                break
            else:
                print("‚ö†Ô∏è Debes ingresar un n√∫mero positivo.")
        except ValueError:
            print("‚ö†Ô∏è Valor inv√°lido. Intenta de nuevo.")

    for i in range(cantidad_estudiantes):
        print("\n" + "-"*70)
        print(f"üßë‚Äçüéì Estudiante {i+1}")
        print("-"*70)

        # ========== DATOS PERSONALES ==========
        print("\nüë§ DATOS PERSONALES")
        print("-"*70)
        nombre = pedir_dato("Nombre")
        apellido = pedir_dato("Apellido")

        nombre_completo = f"{nombre} {apellido}"
        print(f"\n‚úÖ Nombre completo registrado: {nombre_completo}")

        # ========== IDENTIFICACI√ìN ==========
        print("\nü™™ IDENTIFICACI√ìN")
        print("-"*70)
        cedula = pedir_dato(
            "C√©dula (000-000000-0000A)",
            validar=lambda c: re.fullmatch(r"\d{3}-\d{6}-\d{4}[A-Z]", c),
            ejemplo="001-123456-0000A",
            mayus=True
        )

        carnet = pedir_dato(
            "Carnet (25-00000-0)",
            validar=lambda c: re.fullmatch(r"\d{2}-\d{5}-\d", c),
            ejemplo="25-00000-0"
        )

        # ========== UBICACI√ìN ==========
        print("\nüìç UBICACI√ìN")
        print("-"*70)
        municipio = pedir_dato("Municipio")
        departamento = pedir_dato("Departamento")

        # ========== DATOS PERSONALES EXTRA ==========
        print("\nüìÜ DATOS ADICIONALES")
        print("-"*70)

        # Edad
        while True:
            try:
                edad = int(pedir_dato("Edad"))
                if edad > 0:
                    break
                else:
                    print("‚ö†Ô∏è La edad debe ser positiva.")
            except ValueError:
                print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")

        # G√©nero
        while True:
            print("\n   ‚Üí G√©nero:")
            print("     1. Masculino")
            print("     2. Femenino")
            op = input("     Elige (1-2): ").strip()
            if op == "1":
                genero = "M"
                break
            elif op == "2":
                genero = "F"
                break
            else:
                print("‚ö†Ô∏è Opci√≥n inv√°lida.")

        sangre = pedir_dato("Tipo de sangre (A+, O-, B+)", mayus=True)

        # ========== DATOS ACAD√âMICOS ==========
        print("\nüéì DATOS ACAD√âMICOS")
        print("-"*70)

        while True:
            print("\n   ‚Üí Modalidad:")
            print("     1. Presencial")
            print("     2. Virtual")
            print("     3. Mixta")
            op = input("     Elige (1-3): ").strip()
            if op == "1":
                modalidad = "Presencial"
                break
            elif op == "2":
                modalidad = "Virtual"
                break
            elif op == "3":
                modalidad = "Mixta"
                break
            else:
                print("‚ö†Ô∏è Opci√≥n inv√°lida.")

        while True:
            print("\n   ‚Üí Situaci√≥n acad√©mica:")
            print("     1. Regular")
            print("     2. Sabatino")
            print("     3. Dominical")
            op = input("     Elige (1-3): ").strip()
            if op == "1":
                situacion = "Regular"
                break
            elif op == "2":
                situacion = "Sabatino"
                break
            elif op == "3":
                situacion = "Dominical"
                break
            else:
                print("‚ö†Ô∏è Opci√≥n inv√°lida.")

        carrera = pedir_dato("Carrera")

        while True:
            try:
                anio = int(pedir_dato("A√±o actual (1-6)"))
                if 1 <= anio <= 6:
                    break
                print("‚ö†Ô∏è El a√±o debe estar entre 1 y 6.")
            except ValueError:
                print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")

        while True:
            try:
                ciclo = int(pedir_dato("Ciclo (1 o 2)"))
                if ciclo in [1, 2]:
                    break
                print("‚ö†Ô∏è Solo puede ser 1 o 2.")
            except ValueError:
                print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")

        while True:
            try:
                semestre = int(pedir_dato("Semestre (1 o 2)"))
                if semestre in [1, 2]:
                    break
                print("‚ö†Ô∏è Solo puede ser 1 o 2.")
            except ValueError:
                print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")

        area = pedir_dato("√Årea de conocimiento")

        # ========== IDIOMAS ==========
        print("\nüó£Ô∏è IDIOMAS")
        print("-"*70)
        idiomas = []
        try:
            cantidad_idiomas = int(pedir_dato("¬øCu√°ntos idiomas domina?"))
        except ValueError:
            cantidad_idiomas = 0

        for j in range(cantidad_idiomas):
            idioma = pedir_dato(f"Idioma {j+1}")
            idiomas.append(idioma)

        # ========== MATERIA Y NOTAS ==========
        print("\nüìö MATERIAS Y NOTAS")
        print("-"*70)

        materia = pedir_dato("Materia")

        notas = []
        print("   ‚Üí Ingrese las notas de los 4 parciales (0-100):")
        for p in range(1, 5):
            while True:
                try:
                    nota = float(pedir_dato(f"Parcial {p}"))
                    if 0 <= nota <= 100:
                        notas.append(nota)
                        break
                    else:
                        print("‚ö†Ô∏è La nota debe estar entre 0 y 100.")
                except ValueError:
                    print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")

        promedio = calcular_promedio(notas)
        fecha_registro = datetime.now().strftime("%d/%m/%Y %H:%M:%S")

        estudiantes.append({
            "nombre": nombre,
            "apellido": apellido,
            "cedula": cedula,
            "carnet": carnet,
            "municipio": municipio,
            "departamento": departamento,
            "edad": edad,
            "genero": genero,
            "sangre": sangre,
            "modalidad": modalidad,
            "situacion": situacion,
            "carrera": carrera,
            "anio": anio,
            "ciclo": ciclo,
            "semestre": semestre,
            "area": area,
            "idiomas": idiomas,
            "materia": materia,
            "notas": notas,
            "promedio": promedio,
            "fecha_registro": fecha_registro,
            "ultima_modificacion": None
        })

        print("\n‚úÖ Estudiante agregado correctamente.\n")
        print(f"üìÖ Fecha de registro: {fecha_registro}")
        print("-"*70)
estudiantes = [] 
# -------------------------------
#  Mostrar lista completa
def mostrar_lista(estudiantes):
    if not estudiantes:
        print("‚ö†Ô∏è No hay estudiantes registrados.")
        return

    print("="*60)
    print("üìã LISTA COMPLETA DE ESTUDIANTES")
    print("="*60)

    for est in estudiantes:
        print("\n" + "-"*60)
        print(f"üë§ Nombre completo: {est['nombre']} {est['apellido']}")
        print(f"ü™™ C√©dula: {est['cedula']} | üéü Carnet: {est['carnet']}")
        print(f"üìç Municipio: {est['municipio']} | Departamento: {est['departamento']}")
        print(f"üéÇ Edad: {est['edad']} | G√©nero: {est['genero']} | Tipo de sangre: {est['sangre']}")
        print(f"üéì Carrera: {est['carrera']} | A√±o: {est['anio']} | Ciclo: {est['ciclo']} | Semestre: {est['semestre']}")
        print(f"üè´ Modalidad: {est['modalidad']} | Situaci√≥n acad√©mica: {est['situacion']}")
        print(f"üìö √Årea de conocimiento: {est['area']}")
        print(f"üó£ Idiomas: {', '.join(est['idiomas']) if est['idiomas'] else 'Ninguno'}")
        print(f"üìò Materia inscrita: {est['materia']}")
        
        # Mostrar notas de forma ordenada
        print("üìù Notas parciales:")
        for idx, n in enumerate(est['notas'], start=1):
            print(f"   Parcial {idx}: {n:.2f}")
        
        print(f"   ‚û§ Promedio: {est['promedio']:.2f} | Estado: {'Aprobado ‚úÖ' if est['promedio'] >= 60 else 'Reprobado ‚ùå'}")
        print(f"üìÖ Fecha de registro: {est['fecha_registro']}")
        if est.get("ultima_modificacion"):
            print(f"‚úèÔ∏è √öltima modificaci√≥n: {est['ultima_modificacion']}")
        print("-"*60)
        print("-"*50)

# -------------------------------
#  Buscar estudiante (y opci√≥n editar/eliminar)
# -------------------------------
def buscar_estudiante(estudiantes):
    try:
        carnet = input("Ingrese el carnet a buscar (formato 25-0000-0): ").strip()
        if not re.fullmatch(r"\d{2}-\d{5}-\d", carnet):
            print("‚ö†Ô∏è Formato inv√°lido. Ejemplo: 25-0000-0")
            return
        for est in estudiantes:
            if est["carnet"] == carnet:
                # Mostrar detalles (como en mostrar_lista pero solo de este estudiante)
                print("="*50)
                print(f"üë§ {est['nombre']} {est['apellido']} ({est['carnet']})")
                print(f"ü™™ C√©dula: {est['cedula']}")
                print(f"üìç {est['municipio']} - {est['departamento']}")
                print(f"üéÇ {est['edad']} a√±os | G√©nero: {est['genero']} | Sangre: {est['sangre']}")
                print(f"üéì Carrera: {est['carrera']} | A√±o: {est['anio']} | Ciclo: {est['ciclo']} | Semestre: {est['semestre']}")
                print(f"üè´ Modalidad: {est['modalidad']} | Situaci√≥n: {est['situacion']}")
                print(f"üìö √Årea: {est['area']}")
                print(f"üó£ Idiomas: {', '.join(est['idiomas']) if est['idiomas'] else 'Ninguno'}")
                print(f"üìò Materia: {est['materia']}")
                for idx, n in enumerate(est['notas'], start=1):
                    print(f"   - Parcial {idx}: {n:.2f}")
                print(f"   -> Promedio: {est['promedio']:.2f}")
                estado = "Aprobado ‚úÖ" if est["promedio"] >= 60 else "Reprobado ‚ùå"
                print(f"Estado final: {estado}")
                print(f"üìÖ Registrado el: {est['fecha_registro']}")
                if est.get("ultima_modificacion"):
                    print(f"‚úèÔ∏è √öltima modificaci√≥n: {est['ultima_modificacion']}")
                print("="*50)

                # Opciones post-b√∫squeda
                while True:
                    try:
                        print("\n¬øQu√© deseas hacer con este registro?")
                        print("1. Editar datos")
                        print("2. Eliminar estudiante")
                        print("3. Volver al men√∫")
                        op = int(input("Elige (1-3): ").strip())
                        if op == 1:
                            editar_estudiante(estudiantes, est)
                            break
                        elif op == 2:
                            eliminar_estudiante(estudiantes, carnet_confirm=carnet)
                            break
                        elif op == 3:
                            return
                        else:
                            print("‚ö†Ô∏è Opci√≥n inv√°lida.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
                return
        print("‚ö†Ô∏è Estudiante no encontrado.")
    except Exception as e:
        print(f"‚ö†Ô∏è Error en b√∫squeda: {e}")

# -------------------------------
#  Eliminar estudiante
# -------------------------------
def eliminar_estudiante(estudiantes, carnet_confirm=None):
    try:
        if carnet_confirm:
            carnet = carnet_confirm
        else:
            carnet = input("Ingrese el carnet del estudiante a eliminar (formato 25-0000-0): ").strip()
        if not re.fullmatch(r"\d{2}-\d{5}-\d", carnet):
            print("‚ö†Ô∏è Formato inv√°lido. Ejemplo: 25-00000-0")
            return
        for i, est in enumerate(estudiantes):
            if est["carnet"] == carnet:
                # confirmaci√≥n
                confirm = input(f"¬øSeguro que deseas eliminar al estudiante llamado {est['nombre']} {est['apellido']}? (s/n): ").strip().lower()
                if confirm == "s":
                    del estudiantes[i]
                    print("üóë Estudiante eliminado correctamente.")
                else:
                    print("Operaci√≥n cancelada.")
                return
        print("‚ö†Ô∏è Estudiante no encontrado.")
    except Exception as e:
        print(f"‚ö†Ô∏è Error al eliminar: {e}")

# -------------------------------
# 5 Editar estudiante (por campos)
# -------------------------------
def editar_estudiante(estudiantes, est):
    try:
        while True:
            print(f"\n¬øQu√© campo deseas editar del estudiante llamado {est['nombre']} {est['apellido']} y con n√∫mero de carnet {est['carnet']}?")
            print("1. Nombre")
            print("2. Apellido")
            print("3. C√©dula")
            print("4. Carnet")
            print("5. Municipio")
            print("6. Departamento")
            print("7. Edad")
            print("8. G√©nero")
            print("9. Tipo de sangre")
            print("10. Modalidad")
            print("11. Situaci√≥n acad√©mica")
            print("12. Carrera")
            print("13. A√±o")
            print("14. Ciclo")
            print("15. Semestre")
            print("16. √Årea de conocimiento")
            print("17. Idiomas")
            print("18. Materia")
            print("19. Notas (4 parciales)")
            print("20. Volver")
            try:
                op = int(input("Elige (1-20): ").strip())
            except ValueError:
                print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
                continue

            if op == 1:
                print("¬øConfirmas que quieres hacer esta acci√≥n? (s/n)")
                confirmar = input().strip().lower()
                if confirmar == "s":
                    nuevo = input("Nuevo nombre: ").strip()
                    if nuevo:
                        est["nombre"] = nuevo
                        print("‚úÖ Nombre actualizado.")
                    else:
                        print("‚ö†Ô∏è saliento del programa.")
                        break
            elif op == 2:
                nuevo = input("Nuevo apellido: ").strip()
                if nuevo:
                    est["apellido"] = nuevo
                    print("‚úÖ Apellido actualizado.")
                else:
                    print("‚ö†Ô∏è Apellido vac√≠o, no se modific√≥.")
            elif op == 3:
                while True:
                    nuevo = input("Nueva c√©dula (formato 000-000000-0000A): ").strip().upper()
                    if not nuevo:
                        print("‚ö†Ô∏è La c√©dula no puede estar vac√≠a.")
                    elif not re.fullmatch(r"\d{3}-\d{6}-\d{4}[A-Z]", nuevo):
                        print("‚ö†Ô∏è Formato inv√°lido.")
                    else:
                        est["cedula"] = nuevo
                        print("‚úÖ C√©dula actualizada.")
                        break
            elif op == 4:
                while True:
                    nuevo = input("Nuevo carnet (formato 25-0000-0): ").strip()
                    if not nuevo:
                        print("‚ö†Ô∏è El carnet no puede estar vac√≠o.")
                    elif any(e["carnet"] == nuevo and e is not est for e in estudiantes):
                        print("‚ö†Ô∏è Ya existe otro estudiante con ese carnet.")
                    elif not re.fullmatch(r"\d{2}-\d{4}-\d", nuevo):
                        print("‚ö†Ô∏è Formato inv√°lido.")
                    else:
                        est["carnet"] = nuevo
                        print("‚úÖ Carnet actualizado.")
                        break
            elif op == 5:
                nuevo = input("Nuevo municipio: ").strip()
                if nuevo:
                    est["municipio"] = nuevo
                    print("‚úÖ Municipio actualizado.")
                else:
                    print("‚ö†Ô∏è Municipio vac√≠o, no se modific√≥.")
            elif op == 6:
                nuevo = input("Nuevo departamento: ").strip()
                if nuevo:
                    est["departamento"] = nuevo
                    print("‚úÖ Departamento actualizado.")
                else:
                    print("‚ö†Ô∏è Departamento vac√≠o, no se modific√≥.")
            elif op == 7:
                while True:
                    try:
                        nuevo = int(input("Nueva edad: ").strip())
                        if nuevo > 0:
                            est["edad"] = nuevo
                            print("‚úÖ Edad actualizada.")
                            break
                        else:
                            print("‚ö†Ô∏è La edad debe ser positiva.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
            elif op == 8:
                while True:
                    try:
                        print("G√©nero:")
                        print("1. Masculino")
                        print("2. Femenino")
                        g = int(input("Elige (1-2): ").strip())
                        if g == 1:
                            est["genero"] = "M"
                            print("‚úÖ G√©nero actualizado.")
                            break
                        elif g == 2:
                            est["genero"] = "F"
                            print("‚úÖ G√©nero actualizado.")
                            break
                        else:
                            print("‚ö†Ô∏è Opci√≥n inv√°lida.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
            elif op == 9:
                nuevo = input("Nuevo tipo de sangre: ").strip().upper()
                if nuevo:
                    est["sangre"] = nuevo
                    print("‚úÖ Tipo de sangre actualizado.")
                else:
                    print("‚ö†Ô∏è Vac√≠o, no se modific√≥.")
            elif op == 10:
                while True:
                    try:
                        print("Modalidad:")
                        print("1. Presencial")
                        print("2. Virtual")
                        print("3. Mixta")
                        m = int(input("Elige (1-3): ").strip())
                        if m == 1:
                            est["modalidad"] = "Presencial"
                            break
                        elif m == 2:
                            est["modalidad"] = "Virtual"
                            break
                        elif m == 3:
                            est["modalidad"] = "Mixta"
                            break
                        else:
                            print("‚ö†Ô∏è Opci√≥n inv√°lida.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
                print("‚úÖ Modalidad actualizada.")
            elif op == 11:
                while True:
                    try:
                        print("Situaci√≥n acad√©mica:")
                        print("1. Regular")
                        print("2. Sabatino")
                        print("3. Dominical")
                        s = int(input("Elige (1-3): ").strip())
                        if s == 1:
                            est["situacion"] = "Regular"
                            break
                        elif s == 2:
                            est["situacion"] = "Sabatino"
                            break
                        elif s == 3:
                            est["situacion"] = "Dominical"
                            break
                        else:
                            print("‚ö†Ô∏è Opci√≥n inv√°lida.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
                print("‚úÖ Situaci√≥n acad√©mica actualizada.")
            elif op == 12:
                nuevo = input("Nueva carrera: ").strip()
                if nuevo:
                    est["carrera"] = nuevo
                    print("‚úÖ Carrera actualizada.")
                else:
                    print("‚ö†Ô∏è Vac√≠o, no se modific√≥.")
            elif op == 13:
                while True:
                    try:
                        nuevo = int(input("Nuevo a√±o (1,2,3,...): ").strip())
                        if nuevo > 0:
                            est["anio"] = nuevo
                            print("‚úÖ A√±o actualizado.")
                            break
                        else:
                            print("‚ö†Ô∏è Debe ser positivo.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
            elif op == 14:
                while True:
                    try:
                        nuevo = int(input("Nuevo ciclo (1 o 2): ").strip())
                        if nuevo in [1, 2]:
                            est["ciclo"] = nuevo
                            print("‚úÖ Ciclo actualizado.")
                            break
                        else:
                            print("‚ö†Ô∏è Solo 1 o 2.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
            elif op == 15:
                while True:
                    try:
                        nuevo = int(input("Nuevo semestre (1 o 2): ").strip())
                        if nuevo in [1, 2]:
                            est["semestre"] = nuevo
                            print("‚úÖ Semestre actualizado.")
                            break
                        else:
                            print("‚ö†Ô∏è Solo 1 o 2.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
            elif op == 16:
                nuevo = input("Nueva √°rea de conocimiento: ").strip()
                if nuevo:
                    est["area"] = nuevo
                    print("‚úÖ √Årea actualizada.")
                else:
                    print("‚ö†Ô∏è Vac√≠o, no se modific√≥.")
            elif op == 17:
                idiomas = []
                while True:
                    try:
                        cant = int(input("¬øCu√°ntos idiomas domina ahora?: ").strip())
                        if cant >= 0:
                            break
                        else:
                            print("‚ö†Ô∏è Debe ser 0 o positivo.")
                    except ValueError:
                        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
                for j in range(cant):
                    while True:
                        idi = input(f" - Idioma {j+1}: ").strip()
                        if idi:
                            idiomas.append(idi)
                            break
                        print("‚ö†Ô∏è No puede estar vac√≠o.")
                est["idiomas"] = idiomas
                print("‚úÖ Idiomas actualizados.")
            elif op == 18:
                nuevo = input("Nueva materia: ").strip()
                if nuevo:
                    est["materia"] = nuevo
                    print("‚úÖ Materia actualizada.")
                else:
                    print("‚ö†Ô∏è Vac√≠o, no se modific√≥.")
            elif op == 19:
                notas = []
                print("Ingrese las 4 notas (0-100):")
                for p in range(1, 5):
                    while True:
                        try:
                            n = float(input(f" Parcial {p}: ").strip())
                            if 0 <= n <= 100:
                                notas.append(n)
                                break
                            else:
                                print("‚ö†Ô∏è Debe estar entre 0 y 100.")
                        except ValueError:
                            print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
                est["notas"] = notas
                est["promedio"] = calcular_promedio(notas)
                print("‚úÖ Notas y promedio actualizados.")
            elif op == 20:
                # actualizar fecha de modificaci√≥n y salir
                est["ultima_modificacion"] = datetime.now().strftime("%d/%m/%Y %H:%M:%S")
                print("‚Ü©Ô∏è Volviendo...")
                break
            else:
                print("‚ö†Ô∏è Opci√≥n inv√°lida.")

            # cada vez que se modifica algo actualizamos ultima_modificacion
            est["ultima_modificacion"] = datetime.now().strftime("%d/%m/%Y %H:%M:%S")

    except Exception as e:
        print(f"‚ö†Ô∏è Error al editar: {e}")

# -------------------------------
# Men√∫ principal
# -------------------------------
def mostrar_menu():
    print("\n" + "="*50)
    print("üéì MEN√ö PRINCIPAL")
    print("="*50)
    print("1. Agregar estudiante")
    print("2. Buscar / Ver / Editar estudiante (por carnet)")
    print("3. Eliminar estudiante (por carnet)")
    print("4. Mostrar lista de estudiantes")
    print("5. Generar certificados PDF")
    print("6. Salir")

# -------------------------------
# Funci√≥n principal
# -------------------------------
def main():
    print("=" * 50)
    print("‚ú® Bienvenido al Sistema de Control de Notas ‚ú®")
    print("=" * 50)
    while True:
        mostrar_menu()
        try:
            opcion = input("Seleccione una opci√≥n (1-6): ").strip()
            if opcion == "1":
                mensaje = ("   Para cancelar la operaci√≥n y volver al men√∫, escribe 'salir'.\n   Presiona Enter para continuar...")
                if confirmar_entrada(mensaje):  # si confirma, contin√∫a
                    agregar_estudiante(estudiantes)
                else:
                    print("‚Ü©Ô∏è Operaci√≥n cancelada. Regresando al men√∫ principal.")

            elif opcion == "2":
                mensaje = ("   Para cancelar la operaci√≥n y volver al men√∫, escribe 'salir'.\n   Presiona Enter para continuar...")
                if confirmar_entrada(mensaje):
                    buscar_estudiante(estudiantes)
                else:
                    print("‚Ü©Ô∏è Operaci√≥n cancelada. Regresando al men√∫ principal.")

            elif opcion == "3":
                mensaje = ("   Para cancelar la operaci√≥n y volver al men√∫, escribe 'salir'.\n   Presiona Enter para continuar...")
                if confirmar_entrada(mensaje):
                    eliminar_estudiante(estudiantes)
                else:
                    print("‚Ü©Ô∏è Operaci√≥n cancelada. Regresando al men√∫ principal.")

            elif opcion == "4":
                mensaje = ("   Para cancelar la operaci√≥n y volver al men√∫, escribe 'salir'.\n   Presiona Enter para continuar...")
                if confirmar_entrada(mensaje):
                    mostrar_lista(estudiantes)
                else:
                    print("‚Ü©Ô∏è Operaci√≥n cancelada. Regresando al men√∫ principal.")

            elif opcion == "5":
                mensaje = ("   Para cancelar la operaci√≥n y volver al men√∫, escribe 'salir'.\n   Presiona Enter para continuar...")
                if confirmar_entrada(mensaje):
                    gen = input("  Ingrese el carnet del estudiante para generar su certificado individualmente: ").strip()
                    if gen.lower() == "salir":
                        print("‚Ü©Ô∏è Operaci√≥n cancelada. Regresando al men√∫ principal.")
                        continue
                    if gen:
                        encontrado = False
                        for est in estudiantes:
                            if est["carnet"] == gen:
                                nombre_pdf = f"certificado_{est['carnet'].replace('-', '_')}.pdf"
                                generar_certificado_pdf(est, nombre_pdf)
                                encontrado = True
                                break
                        if not encontrado:
                            print(f"‚ö†Ô∏è No se encontr√≥ al estudiante con n√∫mero de carnet {gen}.")
                    else:
                        print("‚ö†Ô∏è Carnet vac√≠o. Intente de nuevo.")
                else:
                    print("‚Ü©Ô∏è Operaci√≥n cancelada. Regresando al men√∫ principal.")

            elif opcion == "6":
                print("üëã Gracias por usar el sistema. ¬°Hasta pronto!")
                break

            else:
                print("‚ö†Ô∏è Opci√≥n inv√°lida. Intente de nuevo.")

        except Exception as e:
            print(f"‚ö†Ô∏è Error inesperado en el men√∫: {e}")

# Ejecutar programa
if __name__ == "__main__":
    main()